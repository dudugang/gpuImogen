#!/bin/bash

# input arguments:
# 1 = runfile
# 2 = output stream #
# 3 = #nodes
# 4 = PPN
# 5 = optionally np (default = nodes*ppn)
# 6 = GPU to use (if serial)

# --- Check for input file argument --- #
if [ -z "${1}" ]; then
  echo ">>> ERROR: No run file specified. Aborting script."
  exit 1
fi

# --- Determine user name --- #
myName=`whoami`

# --- Determine stream output --- #
stream=${2}
if [ -z "$2" ]; then
  stream="1"
fi
redirectStr="${HOME}/Results/logfile${stream}.out"

# --- Test for results directory --- #
resDir="${HOME}/Results"
if [ -d $resDir ]; then
  activeResDir=$resDir
else
  mkdir "${HOME}/Results/"
  echo ">>> WARNING: No Results directory found. One has been created."
fi

nnodes=${3};
if [ -z "$3" ]; then nnodes="1"; fi

procpn=${4};
if [ -z "$4" ]; then procpn="1"; fi;

NP=${5}
if [ -z "$5" ]; then
  NP=$(expr $nnodes \* $procpn)
fi

GPUID=${6}
if [ -z "$6" ]; then
  GPUID="0"
fi

# --- Execute Imogen --- #
# Acquire a temp file and write a script for qsub

TFILE=$(mktemp);
echo "module load mpi-tor/openmpi-1.4.5_gcc-4.4.6" >> $TFILE
echo "module load matlab" >> $TFILE
echo "module load cuda" >> $TFILE
echo "echo PATH: \$PATH" >> $TFILE
echo "cd $(pwd)" >> $TFILE
echo "mpirun -np $NP matlab -nodisplay -nojvm -r \"parImogenLoad('${1}','${redirectStr}','${alias}', $GPUID);\" " >> $TFILE

echo "Submitting job with -l nodes=$nnodes:ppn=$procpn and mpirun with -np $NP; 2 seconds to abort:"
sleep 2;

qsub -q xlonggpu -l nodes=$nnodes:ppn=$procpn $TFILE -o ~/Results/logfile${2}.out
#cat $TFILE
sleep 2;

rm $TFILE

